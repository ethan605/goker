classDiagram
    Table --|> Identifiable : implements
    Table --|> Hand : implements
    Player --|> Gambler : implements
    Player --|> Identifiable : implements
    Dealer --|> Hand : implements

    GamePlay ..> Player
    GamePlay ..> Table
    Table ..> Dealer
    Dealer ..> Deck
    Deck ..> Card
    Table ..> Pot

    class Identifiable {
        <<abstract>>
        UUID() string
    }

    class Hand {
        <<abstract>>
        NewHand() error
        FinishHand() error
    }

    class Gambler {
        <<abstract>>
        BetBlind(string) error
        Bet(int) error
        Earn(int)
    }

    class GamePlay {
        <<concrete>>
        -List~Table~ tables
        -List~Player~ players

        OpenTable()$ Table
        NewPlayer()$ Player
    }

    class Table {
        <<concrete>>
        -string uuid
        -Dealer dealer
        -List~Player~ players

        PlayerJoin(string)
        PlayerLeave(string)
        Close() error
    }

    class Player {
        <<concrete>>
        -string uuid
        -int stack
        -List~Card~ holdCards

        Stack() int
        HoldCards() List~Card~
    }

    class Dealer {
        <<concrete>>
        -Deck deck
    }

    class Deck {
        <<concrete>>
        -dealtCards List~Card~
        -remainingCards List~Card~

        DealtCards() List~Card~
        Deal(int) List~Card~
    }

    class Card {
        <<concrete>>
        -Rank rank
        -Suit suit

        Rank() Rank
        Suit() Suit
    }

    class Pot {
        <<concrete>>
        -int value
        -List~Gambler~ eligibles

        Value() int
        Eligibles() List~Gambler~
        CollectChips()
        RewardChips(Gambler)
    }
